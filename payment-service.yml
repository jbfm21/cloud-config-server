springdoc:
  packagesToScan: br.com.example.microservice.order.controller,

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/payment_service
    driverClassName: com.mysql.cj.jdbc.Driver
  
    #hikari:
    #  dataSourceProperties:
    #    fastConnectionFailoverEnabled: true
    #  leak-detection-threshold: 5000
    #  axon-master:
    #    jdbcUrl: jdbc:mysql://localhost:3306/order
    #    username: sa
    #    password: pass
    #    driverClassName: com.mysql.cj.jdbc.Driver
    #    connectionTestQuery: SELECT 1
    #    connectionTimeout: 10000
    #    maximumPoolSize: 15
    #  order-projection:
    #    jdbcUrl: jdbc:mysql://localhost:3306/order
    #    username: sa
    #    password: pass
    #    driverClassName: com.mysql.cj.jdbc.Driver
    #    connectionTestQuery: SELECT 1
    #    connectionTimeout: 10000
    #    maximumPoolSize: 10
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: false      
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        ddl-auto: update 

axon:
  aggregate:
    order:
       snapshot-threshold: 3
  serializer:
    events: jackson
  #amqp:
  #  exchange: order.events
  #  transaction-mode: transactional
  #eventhandling:
  #  processors:
  #    amqpEvents:
  #      source: rabbitMQSpringAMQPMessageSource    
  #      mode: subscribing    
#  axonserver:
#    servers: ${vcap.services.AxonServer.credentials.uri:localhost}


    